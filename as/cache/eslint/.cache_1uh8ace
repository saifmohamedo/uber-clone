[{"F:\\WORK\\uber-clone\\pages\\api\\hello.js":"1","F:\\WORK\\uber-clone\\pages\\components\\Map.jsx":"2","F:\\WORK\\uber-clone\\pages\\components\\RideSelector.jsx":"3","F:\\WORK\\uber-clone\\pages\\confirm.jsx":"4","F:\\WORK\\uber-clone\\pages\\login.jsx":"5","F:\\WORK\\uber-clone\\pages\\search.jsx":"6","F:\\WORK\\uber-clone\\pages\\_app.js":"7","F:\\WORK\\uber-clone\\pages\\index.js":"8"},{"size":91,"mtime":1636279706261,"results":"9","hashOfConfig":"10"},{"size":1031,"mtime":1636737985513,"results":"11","hashOfConfig":"10"},{"size":2426,"mtime":1636807054476,"results":"12","hashOfConfig":"10"},{"size":2563,"mtime":1636807617960,"results":"13","hashOfConfig":"10"},{"size":1222,"mtime":1636810900975,"results":"14","hashOfConfig":"10"},{"size":2753,"mtime":1636732470970,"results":"15","hashOfConfig":"10"},{"size":213,"mtime":1636807799789,"results":"16","hashOfConfig":"10"},{"size":2399,"mtime":1636810710867,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n5fg3c",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\WORK\\uber-clone\\pages\\api\\hello.js",[],"F:\\WORK\\uber-clone\\pages\\components\\Map.jsx",[],"F:\\WORK\\uber-clone\\pages\\components\\RideSelector.jsx",["37"],"import React, { useState, useEffect } from \"react\";\r\nimport tw from \"tailwind-styled-components\";\r\n\r\nexport const carList = [\r\n  {\r\n    imgUrl: \"https://i.ibb.co/cyvcpfF/uberx.png\",\r\n    service: \"UberX\",\r\n    multiplier: 1.0,\r\n  },\r\n  {\r\n    imgUrl: \"https://i.ibb.co/YDYMKny/uberxl.png\",\r\n    service: \"UberXL\",\r\n    multiplier: 1.5,\r\n  },\r\n  {\r\n    imgUrl: \"https://i.ibb.co/Xx4G91m/uberblack.png\",\r\n    service: \"Black\",\r\n    multiplier: 2.0,\r\n  },\r\n  {\r\n    imgUrl: \"https://i.ibb.co/cyvcpfF/uberx.png\",\r\n    service: \"Comfort\",\r\n    multiplier: 1.2,\r\n  },\r\n  {\r\n    imgUrl: \" https://i.ibb.co/1nStPWT/uberblacksuv.png\",\r\n    service: \"Black SUV\",\r\n    multiplier: 2.8,\r\n  },\r\n];\r\n\r\nconst RideSelector = (props) => {\r\n  const [rideDuration, setRideDuration] = useState();\r\n\r\n  useEffect(() => {\r\n    const token =\r\n      \"pk.eyJ1Ijoic2FpZm1vaGFtZWRzdiIsImEiOiJja3ZwNGNneWIwd2E3MndxaG14djg0endqIn0.Y_JAbXg08WKPINYkZC4AdA\";\r\n    rideDuration = fetch(\r\n      `https://api.mapbox.com/directions/v5/mapbox/driving/${props.pickup[0]}, ${props.pickup[1]};${props.dropoff[0]},${props.dropoff[1]}?` +\r\n        new URLSearchParams({\r\n          access_token: token,\r\n        })\r\n    )\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        setRideDuration(res?.routes[0]?.duration / 100);\r\n        console.log(\"duration\", res);\r\n      });\r\n  }, [props.pickup, props.dropoff]);\r\n  return (\r\n    <Wrapper>\r\n      <Title>Choose a ride, or swipe up for more</Title>\r\n      <CarList>\r\n        {carList.map((res, index) => (\r\n          <Car key={index}>\r\n            <CarImage src={res.imgUrl} />\r\n            <CarDetails>\r\n              <Service>{res.service}</Service>\r\n              <Time>{res.multiplier} min away</Time>\r\n            </CarDetails>\r\n            <Price>${(rideDuration * res.multiplier).toFixed(2)}</Price>\r\n          </Car>\r\n        ))}\r\n      </CarList>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RideSelector;\r\nconst Wrapper = tw.div`\r\nflex-1 overflow-y-hidden flex flex-col\r\n`;\r\nconst Title = tw.div`\r\ntext-center text-gray-500 border bg-gray-50 text-xs py-2\r\n`;\r\nconst CarList = tw.div`\r\noverflow-y-scroll\r\n`;\r\nconst Car = tw.div`\r\nflex items-center p-4 \r\n`;\r\nconst CarImage = tw.img`\r\nh-14 mr-4\r\n`;\r\nconst CarDetails = tw.div`\r\nflex flex-col flex-1\r\n`;\r\nconst Service = tw.div`\r\nfont-medium \r\n`;\r\nconst Time = tw.div`\r\nfont-medium text-xs text-blue-500\r\n`;\r\nconst Price = tw.div`\r\nfont-medium\r\n`;\r\n","F:\\WORK\\uber-clone\\pages\\confirm.jsx",["38"],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Link from \"next/link\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport Map from \"./components/map\";\r\nimport RideSelector from \"./components/RideSelector\";\r\nconst Confirm = () => {\r\n  const [Pickup, setPickup] = useState([\"\", \"\"]);\r\n\r\n  const [Dropoff, setDropoff] = useState([\"\", \"\"]);\r\n\r\n  const router = useRouter();\r\n  const { pickup, dropoff } = router.query;\r\n\r\n  // PICKUP\r\n  const getPickupCoords = () => {\r\n    const token =\r\n      \"pk.eyJ1Ijoic2FpZm1vaGFtZWRzdiIsImEiOiJja3ZwNGNneWIwd2E3MndxaG14djg0endqIn0.Y_JAbXg08WKPINYkZC4AdA\";\r\n    fetch(\r\n      `https://api.mapbox.com/geocoding/v5/mapbox.places/${pickup}.json?` +\r\n        new URLSearchParams({\r\n          access_token: token,\r\n          limit: 1,\r\n        })\r\n    )\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        setPickup(res?.features[0]?.center);\r\n      });\r\n  };\r\n  // DROPOFF\r\n  const getDropoffCoords = () => {\r\n    const token =\r\n      \"pk.eyJ1Ijoic2FpZm1vaGFtZWRzdiIsImEiOiJja3ZwNGNneWIwd2E3MndxaG14djg0endqIn0.Y_JAbXg08WKPINYkZC4AdA\";\r\n    fetch(\r\n      `https://api.mapbox.com/geocoding/v5/mapbox.places/${dropoff}.json?` +\r\n        new URLSearchParams({\r\n          access_token: token,\r\n          limit: 1,\r\n        })\r\n    )\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        setDropoff(res?.features[0]?.center);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPickupCoords();\r\n    getDropoffCoords();\r\n  }, [pickup, dropoff]);\r\n  return (\r\n    <Wrapper>\r\n      <Link href=\"/search\" passHref>\r\n        <BackButton>\r\n          <BackArrow src=\"https://img.icons8.com/ios-filled/50/000000/left.png\" />\r\n        </BackButton>\r\n      </Link>\r\n      <Map pickup={Pickup} dropoff={Dropoff} />\r\n      <RideContainer>\r\n        <RideSelector pickup={Pickup} dropoff={Dropoff} />\r\n        <ButtonContainer>\r\n          <Button>Confirm UberX</Button>\r\n        </ButtonContainer>\r\n      </RideContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Confirm;\r\n\r\nconst Wrapper = tw.div`\r\n  flex flex-col h-screen \r\n`;\r\nconst RideContainer = tw.div`\r\n  flex flex-col flex-1 h-1/2\r\n`;\r\nconst ButtonContainer = tw.div`\r\n  border-t-4\r\n`;\r\nconst Button = tw.div`\r\nbg-black text-white text-center my-4 mx-4 py-4 text-xl \r\n`;\r\nconst BackButton = tw.div`\r\n  absolute\r\n  bg-white\r\n  drop-shadow-2xl\r\n  shadow-lg\r\n  rounded-full\r\n  w-12 h-12\r\n  top-4\r\n  left-4\r\n  z-50\r\n  m-2\r\n  p-2\r\n  cursor-pointer\r\n`;\r\nconst BackArrow = tw.img`\r\n  h-full object-contain\r\n`;\r\n","F:\\WORK\\uber-clone\\pages\\login.jsx",["39"],"F:\\WORK\\uber-clone\\pages\\search.jsx",["40","41"],"import React, { useState } from \"react\";\r\nimport tw from \"tailwind-styled-components\";\r\nimport Link from \"next/link\";\r\nconst Search = () => {\r\n  const [pickup, setpickup] = useState(\"\");\r\n  const [dropoff, setdropoff] = useState(\"\");\r\n  return (\r\n    <Wrapper>\r\n      {/* == Button Container == */}\r\n      <Link href=\"/\">\r\n        <ButtonContainer>\r\n          <BackButton src=\"https://img.icons8.com/ios-filled/50/000000/left.png\" />\r\n        </ButtonContainer>\r\n      </Link>\r\n      {/*  == Input Container ==  */}\r\n      <InputContainer>\r\n        <FromToIcons>\r\n          <Circle src=\"https://img.icons8.com/ios-filled/50/9CA3AF/filled-circle.png\" />\r\n          <Line src=\"https://img.icons8.com/ios/50/9CA3AF/vertical-line.png\" />\r\n          <Square src=\"https://img.icons8.com/windows/50/000000/square-full.png\" />\r\n        </FromToIcons>\r\n        <InputBoxes>\r\n          <Input\r\n            placeholder=\"Enter pickup location\"\r\n            value={pickup}\r\n            onChange={(e) => {\r\n              setpickup(e.target.value);\r\n            }}\r\n          />\r\n          <Input\r\n            placeholder=\"Where to?\"\r\n            value={dropoff}\r\n            onChange={(e) => {\r\n              setdropoff(e.target.value);\r\n            }}\r\n          />\r\n        </InputBoxes>\r\n        <PlusIcon src=\"https://img.icons8.com/ios/50/000000/plus-math.png\" />\r\n      </InputContainer>\r\n      {/* == Saved Places ==  */}\r\n      <SavedPlaces>\r\n        <StarIcon src=\"https://img.icons8.com/ios-filled/50/ffffff/star--v1.png\" />\r\n        Saved Places\r\n      </SavedPlaces>\r\n      <Link\r\n        href={{\r\n          pathname: \"/confirm\",\r\n          query: { pickup: pickup, dropoff: dropoff },\r\n        }}\r\n      >\r\n        <ConfirmButton>Confirm Location</ConfirmButton>\r\n      </Link>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n\r\nconst Wrapper = tw.div`\r\n  bg-gray-200 h-screen\r\n`;\r\n\r\nconst ButtonContainer = tw.div`\r\n  bg-white p-4\r\n`;\r\n\r\nconst BackButton = tw.img`\r\n  h-10 cursor-pointer\r\n`;\r\n\r\nconst FromToIcons = tw.div`\r\n  w-10 flex flex-col mr-1 items-center gap-1\r\n`;\r\n\r\nconst InputContainer = tw.div`\r\n  bg-white flex items-center p-4\r\n`;\r\n\r\nconst Circle = tw.img`\r\n  h-2.5\r\n`;\r\n\r\nconst Line = tw.img`\r\n  h-10\r\n`;\r\n\r\nconst Square = tw.img`\r\n  h-3\r\n`;\r\n\r\nconst InputBoxes = tw.div`\r\n  flex flex-col flex-1\r\n`;\r\n\r\nconst Input = tw.input`\r\n  h-10 bg-gray-200 my-2 p-2 rounded-md outline-none\r\n`;\r\n\r\nconst PlusIcon = tw.img`\r\n  w-10 h-10 bg-gray-200 rounded-full ml-4\r\n`;\r\n\r\nconst SavedPlaces = tw.div`\r\n  flex items-center bg-white px-4 py-2 text-xl mt-2\r\n`;\r\n\r\nconst StarIcon = tw.img`\r\n  bg-gray-400 w-10 h-10 p-2 rounded-full mr-2 \r\n`;\r\nconst ConfirmButton = tw.div`\r\nbg-black p-3 mx-4 text-white mt-2 text-center text-2xl cursor-pointer\r\n`;\r\n","F:\\WORK\\uber-clone\\pages\\_app.js",[],"F:\\WORK\\uber-clone\\pages\\index.js",["42","43"],{"ruleId":"44","severity":1,"message":"45","line":38,"column":20,"nodeType":"46","endLine":48,"endColumn":9},{"ruleId":"44","severity":1,"message":"47","line":51,"column":6,"nodeType":"48","endLine":51,"endColumn":23,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"50","line":14,"column":6,"nodeType":"48","endLine":14,"endColumn":8,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":10,"column":7,"nodeType":"54","endLine":10,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":45,"column":7,"nodeType":"54","endLine":50,"endColumn":8},{"ruleId":"44","severity":1,"message":"50","line":20,"column":6,"nodeType":"48","endLine":20,"endColumn":8,"suggestions":"55"},{"ruleId":"52","severity":1,"message":"53","line":38,"column":11,"nodeType":"54","endLine":38,"endColumn":32},"react-hooks/exhaustive-deps","Assignments to the 'rideDuration' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'getDropoffCoords' and 'getPickupCoords'. Either include them or remove the dependency array.","ArrayExpression",["56"],"React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["57"],"@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement",["58"],{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},{"desc":"61","fix":"63"},"Update the dependencies array to be: [pickup, dropoff, getPickupCoords, getDropoffCoords]",{"range":"64","text":"65"},"Update the dependencies array to be: [router]",{"range":"66","text":"67"},{"range":"68","text":"67"},[1536,1553],"[pickup, dropoff, getPickupCoords, getDropoffCoords]",[439,441],"[router]",[637,639]]